#!/bin/sh
############################################################
#
# Program history
############################################################
# Created by. Daejeon Office
# 2022.03.18 Version : Park Si Hyung, Yoon Jun Su
#

############################################################
#
# Program variables
############################################################
# Configuration file path
TBIS_AUTO_CFGFILE="tbis.cfg"
TBIS_AUTO_LOGFILE="tbis.log"
TBIS_AUTO_SQLFILE="tbis.sql"

TBIS_AUTO_TIME=`date +%F_%T |sed 's/://g' |sed 's/-//g'`
if [ -f $TBIS_AUTO_LOGFILE ]
then
    mv $TBIS_AUTO_LOGFILE "$TBIS_AUTO_LOGFILE"_"$TBIS_AUTO_TIME"
fi

echo "############### tbis LOG" > $TBIS_AUTO_LOGFILE
echo $TBIS_AUTO_TIME >> $TBIS_AUTO_LOGFILE
echo >> $TBIS_AUTO_LOGFILE
echo >> $TBIS_AUTO_LOGFILE

############################################################
#
# Function lists
############################################################
FN_AUTO_PROGRESS_CHECK(){
    echo
    printf "continue ? ( [Y]es / [N]o / [S]kip ) : "
    read INPUT_YESNO
    case $INPUT_YESNO in
        "YES"|"Yes"|"yes"|"y"|"Y")
            YESNO=YES
            break;;
        "NO"|"No"|"no"|"n"|"N")
            exit;;
        "SKIP"|"Skip"|"S"|"s")
            YESNO=SKIP
            break;;
    esac
    echo
}

FN_AUTO_ENGINE(){    
    # Engine install
    if [ $TIBERO_ENGINE == "Y" ] || [ $TIBERO_ENGINE == "y" ]
    then
        echo " tbis Progress> Engine"
        
        FN_AUTO_PROGRESS_CHECK
        
        tar -xvzf ../binary/tibero*.tar.gz -C $USER_HOME 1>$TBIS_AUTO_LOGFILE 2>$TBIS_AUTO_LOGFILE
        #echo " tbis Progress> Engine Success"
    fi
    
}


FN_AUTO_TBINARY(){
    if [ $TIBERO_TBINARY == "Y" ] || [ $TIBERO_TBINARY == "y" ]
    then
        echo " tbis Progress> tbinary Create"
        
        FN_AUTO_PROGRESS_CHECK

        tar -xvf ../binary/tbinary*.tar -C $USER_HOME 1>$TBIS_AUTO_LOGFILE 2>$TBIS_AUTO_LOGFILE
        echo " tbis Progress> tbinary Success"
    fi
    
}

FN_AUTO_CREATEDB(){
    echo
}

FN_AUTO_PROFILE()
{
    # PROFILE
    echo " tbis Progress> Profile Create" 
    TIBERO_BASHPROFILE=`cat $USER_HOME/.bash_profile |grep -v "^$" |head -n 1 `
    TIBERO_PROFILE=`cat $USER_HOME/.profile |grep -v "^$" |head -n 1 `
    
    FN_AUTO_PROGRESS_CHECK

    if [ -z $TIBERO_PROFILE ]
    then   
        sh tbis.cfg USER_PROFILE >> $USER_HOME/.bash_profile
    elif [ -z $TIBERO_BASHPROFILE ]
    then
        sh tbis.cfg USER_PROFILE >> $USER_HOME/.profile
    fi
    echo " tbis Progress> Profile Success"    
}
FN_AUTO_LICENSE(){
    # License copy applying
    if [ -z $TIBERO_LICENSE ]
    then
        echo " tbis Error>../binary/license.xml file check"
        exit
    else
        echo " tbis Progress> license apply Create"    
        FN_AUTO_PROGRESS_CHECK
        cp ../binary/license.xml $TB_HOME/license/license.xml
        echo " tbis Progress> license apply Success"        
    fi
}

FN_AUTO_SINGLE(){
    echo
}

FN_AUTO_TSC(){
    echo
}

FN_AUTO_TAC(){
    echo
}
FN_AUTO_TB_SID_TIP(){
    TB_SID=tibero
    echo "$TB_HOME/config/$TB_SID.tip"    
    #TB_SID=`cat $OS_HOME/.bash_profile`
    echo " tbis Progress> TB_SID TIP File Apply Create"
    FN_AUTO_PROGRESS_CHECK
    sh tbis.cfg TB_SID_TIP > $TB_HOME/config/$TB_SID.tip
    echo " tbis Progress> TB_SID TIP File Apply Success"
}
FN_AUTO_CM_SID_TIP(){
    echo " tbis Progress> CM_SID TIP File Apply Create"
    FN_AUTO_PROGRESS_CHECK
    #sh tbis.cfg CM_SID_TIP
    echo " tbis Progress> CM_SID TIP File Apply Success"
}

FN_AUTO_INSTALL(){
    # cfg parsing
    . ./tbis.cfg
    TIBERO_LICENSE=`cat ../binary/license.xml |grep license |head -n 1 `
    
    echo "[*] TIBERO Auto installation Tools Configuration Checking STEP"
    echo "-----------------------------------------------------------------"
    echo "# System Check"
    echo "- OS USER : $USER"
    echo "- OS HOME : $USER_HOME"
    echo "-----------------------------------------------------------------"
    echo "# TIBERO Binary"
    if [ -n $TIBERO_ENGINE ]
    then
        echo "- engine : $TB_HOME"
    fi  

    if [ -n $TIBERO_TBINARY ]
    then
        echo "- tbinary : $TB_HOME/tbinary"
    fi
    echo "-----------------------------------------------------------------"
    echo "# TIBERO DATABASE"
    if [ $TIBERO_TYPE == "SINGLE" ]
    then
        echo "- TIBERO TYPE : SINGLE"
    elif [ $TIBERO_TYPE == "TSC" ]
    then
        echo "- TIBERO TYPE : TSC"
        echo "- TIBERO NODE : $TIBERO_NODE"
    elif [ $TIBERO_TYPE == "TAC" ]
    then
        echo "- TIBERO TYPE : TAC"
        echo "- TIBERO NODE : $TIBERO_NODE"
    fi   

    echo "- CHARSET : $CHARSET"
    echo "-----------------------------------------------------------------"
    echo "# TIBERO Configuration Files"
    echo "- cat tbis.cfg : TIBERO Total Configuration File"
    echo "- cat tbis.sql : CREATE DATABASE SQL File"
    echo "-----------------------------------------------------------------"
    
    FN_AUTO_PROGRESS_CHECK
    
    if [ $USER_HOME -z ]
    then
        echo " tbis Error> User home checking "
        exit
    fi
  
    FN_AUTO_ENGINE
    FN_AUTO_TBINARY
    FN_AUTO_LICENSE
    FN_AUTO_PROFILE

    # Owner Change Files
    # chwon -R $USER:$USER $USER_HOME

}

FN_MAIN_MENU(){
    clear
    echo "[*] TIBERO Installation Shell Script"
    echo "[*] This script is for TmaxTibero "Daejeon Office" only."
    echo "[*] Supported Version : Tibero 6 FS07 â†‘"
    echo "-----------------------------------------------------------------"
    echo "# 1. Auto installation"
    echo "-----------------------------------------------------------------"
    echo "# chk. System Check"
    echo "# ini. Configurations Initialization"
    echo "# press other key to quit"
    echo "-----------------------------------------------------------------"
    printf "Choose the Number : "
    read INPUT_NUMBER
    case $INPUT_NUMBER in
    1)
        clear
        FN_AUTO_INSTALL |tee $TBIS_AUTO_LOGFILE
    ;;
    2)
        echo "2"
    ;;
    3)
        echo "3"
    ;;
    *)
        clear
        echo "tbis exit."
        exit
    ;;
    esac
}

############################################################
#
# Program start
############################################################
# run
FN_MAIN_MENU 2>/dev/null
#FN_MAIN_MENU